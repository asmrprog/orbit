"use strict";(globalThis.webpackChunk_kiwicom_orbit_components=globalThis.webpackChunk_kiwicom_orbit_components||[]).push([[9816],{"./src/InputField/InputField.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CompactInput:()=>CompactInput,CompactInputWithTags:()=>CompactInputWithTags,DefaultInput:()=>DefaultInput,EmailInput:()=>EmailInput,NumberInput:()=>NumberInput,PassportOrIdInput:()=>PassportOrIdInput,PasswordInput:()=>PasswordInput,Playground:()=>Playground,RequiredField:()=>RequiredField,Rtl:()=>Rtl,WithButtonLinkSuffix:()=>WithButtonLinkSuffix,WithError:()=>WithError,WithHelp:()=>WithHelp,WithIconPrefix:()=>WithIconPrefix,WithServiceLogoPrefix:()=>WithServiceLogoPrefix,WithTextPrefix:()=>WithTextPrefix,WithTextSuffix:()=>WithTextSuffix,__namedExportsOrder:()=>__namedExportsOrder,default:()=>InputField_stories});var react=__webpack_require__("../../node_modules/react/index.js"),dist=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs"),addon_knobs_dist=__webpack_require__("../../node_modules/@storybook/addon-knobs/dist/index.js"),icons=__webpack_require__("./src/icons/index.ts"),Visibility=__webpack_require__("./src/icons/Visibility.tsx"),consts=__webpack_require__("./src/InputField/consts.ts");let NAME_OPTIONS=function(NAME_OPTIONS){return NAME_OPTIONS.AIRHELP="AirHelp",NAME_OPTIONS.AIRHELPPLUS="AirHelpPlus",NAME_OPTIONS.ALIPAY="Alipay",NAME_OPTIONS.AMEX="Amex",NAME_OPTIONS.AXA="Axa",NAME_OPTIONS.AXAASSISTANCE="AxaAssistance",NAME_OPTIONS.BOOKING="Booking",NAME_OPTIONS.BUSINESSINSIDER="BusinessInsider",NAME_OPTIONS.CHINAUNIONPAY="ChinaUnionPay",NAME_OPTIONS.DAILYEXPRESS="DailyExpress",NAME_OPTIONS.DINERSCLUB="DinersClub",NAME_OPTIONS.DISCOVER="Discover",NAME_OPTIONS.IATA="IATA",NAME_OPTIONS.JCB="JCB",NAME_OPTIONS.MAILONLINE="MailOnline",NAME_OPTIONS.MAESTRO="Maestro",NAME_OPTIONS.MAESTROSHORT="MaestroShort",NAME_OPTIONS.MASTERCARD="MasterCard",NAME_OPTIONS.MASTERCARDSHORT="MasterCardShort",NAME_OPTIONS.MIR="MIR",NAME_OPTIONS.MIRROR="Mirror",NAME_OPTIONS.NEWYORKTIMES="NewYorkTimes",NAME_OPTIONS.NORTOSECURED="NortonSecured",NAME_OPTIONS.PAYPAL="PayPal",NAME_OPTIONS.RENTALCARS="RentalCars",NAME_OPTIONS.SOFORT="Sofort",NAME_OPTIONS.TRAVELPULSE="TravelPulse",NAME_OPTIONS.TRUSTLY="Trustly",NAME_OPTIONS.USATODAY="UsaToday",NAME_OPTIONS.VISA="Visa",NAME_OPTIONS.VISAHQ="VisaHQ",NAME_OPTIONS.ZOOZ="Zooz",NAME_OPTIONS.ELO="Elo",NAME_OPTIONS.KIWI_GUARANTEE="KiwiGuarantee",NAME_OPTIONS.KIWI_GUARANTEE_FULL="KiwiGuaranteeFull",NAME_OPTIONS.KIWI_GUARANTEE_INLINE="KiwiGuaranteeInline",NAME_OPTIONS}({});var ButtonLink=__webpack_require__("./src/ButtonLink/index.tsx"),TextLink=__webpack_require__("./src/TextLink/index.tsx"),ServiceLogo=__webpack_require__("./src/ServiceLogo/index.tsx"),RenderInRtl=__webpack_require__("./src/utils/rtl/RenderInRtl.tsx"),Tag=__webpack_require__("./src/Tag/index.tsx"),getSpacingToken_consts=__webpack_require__("./src/common/getSpacingToken/consts.ts"),InputField=__webpack_require__("./src/InputField/index.tsx");const getIcons=(name,defaultIcon)=>(0,addon_knobs_dist.select)(name,[null,...Object.keys(icons)],defaultIcon),getIcon=source=>source&&icons[source],InputField_stories={title:"InputField"},DefaultInput=()=>{const label=(0,addon_knobs_dist.text)("Label","Label"),value=(0,addon_knobs_dist.text)("Value",""),placeholder=(0,addon_knobs_dist.text)("Placeholder","Placeholder");return react.createElement(InputField.ZP,{label,value,placeholder,onChange:(0,dist.aD)("change")})};DefaultInput.story={name:"Default input",parameters:{info:"Some description about this type of InputField in general."}};const NumberInput=()=>{const label=(0,addon_knobs_dist.text)("Label","Number"),value=(0,addon_knobs_dist.text)("Value","2"),placeholder=(0,addon_knobs_dist.text)("Placeholder","Number"),maxValue=(0,addon_knobs_dist.number)("maxValue",3),minValue=(0,addon_knobs_dist.number)("minValue",1);return react.createElement(InputField.ZP,{type:"number",label,value,placeholder,maxValue,minValue,onChange:(0,dist.aD)("change")})};NumberInput.story={name:"Number input",parameters:{info:"Some description about this type of InputField in general."}};const PasswordInput=()=>{const label=(0,addon_knobs_dist.text)("Label","Password"),value=(0,addon_knobs_dist.text)("Value","p422W0rd"),placeholder=(0,addon_knobs_dist.text)("Placeholder","Password");return react.createElement(InputField.ZP,{type:"password",label,value,placeholder,onChange:(0,dist.aD)("change")})};PasswordInput.story={name:"Password input",parameters:{info:"Some description about this type of InputField in general."}};const PassportOrIdInput=()=>{const label=(0,addon_knobs_dist.text)("Label","Passport or ID number"),placeholder=(0,addon_knobs_dist.text)("Placeholder","588539238");return react.createElement(InputField.ZP,{type:"passportid",label,placeholder,onChange:(0,dist.aD)("change")})};PassportOrIdInput.story={name:"Passport or ID Input",parameters:{info:"Some description about this type of InputField in general."}};const EmailInput=()=>{const label=(0,addon_knobs_dist.text)("Label","Email"),value=(0,addon_knobs_dist.text)("Value","name@example.co"),placeholder=(0,addon_knobs_dist.text)("Placeholder","Email");return react.createElement(InputField.ZP,{type:"email",label,value,placeholder,onChange:(0,dist.aD)("change"),help:react.createElement("div",null,"Did you meanÂ ",react.createElement(TextLink.ZP,{onClick:(0,dist.aD)("clicked")},"name@example.com"),"?")})};EmailInput.story={name:"Email input",parameters:{info:"Some description about this type of InputField in general."}};const WithTextPrefix=()=>{const label=(0,addon_knobs_dist.text)("Label","Label"),value=(0,addon_knobs_dist.text)("Value",""),placeholder=(0,addon_knobs_dist.text)("Placeholder","Placeholder"),prefix=(0,addon_knobs_dist.text)("Prefix","$");return react.createElement(InputField.ZP,{label,value,placeholder,prefix,onChange:(0,dist.aD)("change")})};WithTextPrefix.story={name:"With text prefix",parameters:{info:"Some description about this type of InputField in general."}};const WithTextSuffix=()=>{const label=(0,addon_knobs_dist.text)("Label","Label"),value=(0,addon_knobs_dist.text)("Value",""),placeholder=(0,addon_knobs_dist.text)("Placeholder","Placeholder"),suffix=(0,addon_knobs_dist.text)("Suffix","Some long text");return react.createElement(InputField.ZP,{label,value,placeholder,suffix:react.createElement("div",{style:{paddingRight:"12px"}},suffix),onChange:(0,dist.aD)("change")})};WithTextSuffix.story={name:"With text suffix",parameters:{info:"Some description about this type of InputField in general."}};const CompactInput=()=>{const value=(0,addon_knobs_dist.text)("Value",""),label=(0,addon_knobs_dist.text)("Label","Label"),placeholder=(0,addon_knobs_dist.text)("Placeholder","Placeholder"),required=(0,addon_knobs_dist.boolean)("required",!1),error=(0,addon_knobs_dist.text)("Error","");return react.createElement(InputField.ZP,{label,inlineLabel:!0,error,value,placeholder,required,onChange:(0,dist.aD)("change")})};CompactInput.story={name:"Compact input",parameters:{info:"Compact input with FormLabel as prefix"}};const CompactInputWithTags=()=>{const value=(0,addon_knobs_dist.text)("Value",""),label=(0,addon_knobs_dist.text)("Label","Label"),placeholder=(0,addon_knobs_dist.text)("Placeholder","Placeholder"),required=(0,addon_knobs_dist.boolean)("required",!1),error=(0,addon_knobs_dist.text)("Error","");return react.createElement(InputField.ZP,{label,inlineLabel:!0,tags:react.createElement(react.Fragment,null,react.createElement(Tag.Z,{selected:!0,onRemove:(0,dist.aD)("onRemove")},"Brno"),react.createElement(Tag.Z,{onRemove:(0,dist.aD)("onRemove")},"Praha"),react.createElement(Tag.Z,{onRemove:(0,dist.aD)("onRemove")},"Praha"),react.createElement(Tag.Z,{onRemove:(0,dist.aD)("onRemove")},"Praha"),react.createElement(Tag.Z,{onRemove:(0,dist.aD)("onRemove")},"Praha"),react.createElement(Tag.Z,{onRemove:(0,dist.aD)("onRemove")},"Praha"),react.createElement(Tag.Z,{onRemove:(0,dist.aD)("onRemove")},"Praha"),react.createElement(Tag.Z,{onRemove:(0,dist.aD)("onRemove")},"Praha"),react.createElement(Tag.Z,{onRemove:(0,dist.aD)("onRemove")},"Praha"),react.createElement(Tag.Z,{onRemove:(0,dist.aD)("onRemove")},"Praha"),react.createElement(Tag.Z,{onRemove:(0,dist.aD)("onRemove")},"Praha"),react.createElement(Tag.Z,{onRemove:(0,dist.aD)("onRemove")},"Praha"),react.createElement(Tag.Z,{onRemove:(0,dist.aD)("onRemove")},"Praha"),react.createElement(Tag.Z,{onRemove:(0,dist.aD)("onRemove")},"Praha"),react.createElement(Tag.Z,{onRemove:(0,dist.aD)("onRemove")},"Praha"),react.createElement(Tag.Z,{onRemove:(0,dist.aD)("onRemove")},"Praha"),react.createElement(Tag.Z,{onRemove:(0,dist.aD)("onRemove")},"Praha"),react.createElement(Tag.Z,{onRemove:(0,dist.aD)("onRemove")},"Praha"),react.createElement(Tag.Z,{onRemove:(0,dist.aD)("onRemove")},"Praha"),react.createElement(Tag.Z,{onRemove:(0,dist.aD)("onRemove")},"Praha")),error,value,placeholder,required,onChange:(0,dist.aD)("change")})};CompactInputWithTags.story={name:"Compact input with tags",parameters:{info:"Compact input with FormLabel as prefix"}};const RequiredField=()=>{const label=(0,addon_knobs_dist.text)("Label","Label"),value=(0,addon_knobs_dist.text)("Value",""),required=(0,addon_knobs_dist.boolean)("required",!0),placeholder=(0,addon_knobs_dist.text)("Placeholder","Placeholder");return react.createElement(InputField.ZP,{label,value,placeholder,required,onChange:(0,dist.aD)("change")})};RequiredField.story={name:"Required field",parameters:{info:"Some description about this type of InputField in general."}};const WithIconPrefix=()=>{const label=(0,addon_knobs_dist.text)("Label","Label"),value=(0,addon_knobs_dist.text)("Value",""),placeholder=(0,addon_knobs_dist.text)("Placeholder","Placeholder"),Prefix=getIcon(getIcons("Prefix","Search"));return react.createElement(InputField.ZP,{label,value,placeholder,prefix:Prefix&&react.createElement(Prefix,null),onChange:(0,dist.aD)("change")})};WithIconPrefix.story={name:"With Icon prefix",parameters:{info:"Some description about this type of InputField in general."}};const WithButtonLinkSuffix=()=>{const label=(0,addon_knobs_dist.text)("Label","Label"),value=(0,addon_knobs_dist.text)("Value",""),placeholder=(0,addon_knobs_dist.text)("Placeholder","Placeholder"),Suffix=getIcon(getIcons("Suffix","Visibility"));return react.createElement(InputField.ZP,{label,value,placeholder,suffix:Suffix&&react.createElement(ButtonLink.Z,{type:"primary",compact:!0,iconLeft:react.createElement(Suffix,null),onClick:(0,dist.aD)("clicked")}),onChange:(0,dist.aD)("change")})};WithButtonLinkSuffix.story={name:"With ButtonLink suffix",parameters:{info:"Some description about this type of InputField in general."}};const WithServiceLogoPrefix=()=>{const label=(0,addon_knobs_dist.text)("Label","Label"),value=(0,addon_knobs_dist.text)("Value",""),placeholder=(0,addon_knobs_dist.text)("Placeholder","Placeholder"),name=(0,addon_knobs_dist.select)("Type",Object.values(NAME_OPTIONS),NAME_OPTIONS.AIRHELP),grayScale=(0,addon_knobs_dist.boolean)("GrayScale",!1);return react.createElement(InputField.ZP,{label,value,placeholder,suffix:react.createElement(ServiceLogo.Z,{name,grayScale}),onChange:(0,dist.aD)("change")})};WithServiceLogoPrefix.story={name:"With ServiceLogo prefix",parameters:{info:"Some description about this type of InputField in general."}};const WithError=()=>{const type=(0,addon_knobs_dist.select)("Type",Object.values(consts.nq),consts.nq.TEXT),name=(0,addon_knobs_dist.text)("Name","input"),label=(0,addon_knobs_dist.text)("Label",""),inlineLabel=(0,addon_knobs_dist.boolean)("inline label",!0),value=(0,addon_knobs_dist.text)("Value",""),placeholder=(0,addon_knobs_dist.text)("Placeholder","Placeholder"),Prefix=getIcon(getIcons("Prefix","Search")),Suffix=getIcon(getIcons("Suffix","Visibility")),help=(0,addon_knobs_dist.text)("Help",""),error=(0,addon_knobs_dist.text)("Error","Please fill out as you have on your passport"),disabled=(0,addon_knobs_dist.boolean)("Disabled",!1),maxValue=(0,addon_knobs_dist.number)("maxValue",NaN),minValue=(0,addon_knobs_dist.number)("minValue",NaN),required=(0,addon_knobs_dist.boolean)("required",!1),maxLength=(0,addon_knobs_dist.number)("maxLength",NaN),minLength=(0,addon_knobs_dist.number)("minLength",NaN),readOnly=(0,addon_knobs_dist.boolean)("readOnly",!1),autoComplete=(0,addon_knobs_dist.text)("autoComplete","off"),dataTest=(0,addon_knobs_dist.text)("dataTest","test"),spaceAfter=(0,addon_knobs_dist.select)("spaceAfter",getSpacingToken_consts.Z,getSpacingToken_consts.Z.MEDIUM),id=(0,addon_knobs_dist.text)("id","ID");return react.createElement(InputField.ZP,{type,name,label,inlineLabel,value,dataTest,placeholder,required,prefix:Prefix&&react.createElement(Prefix,null),suffix:Suffix&&react.createElement(ButtonLink.Z,{iconLeft:react.createElement(Suffix,null),compact:!0,size:"normal",onClick:(0,dist.aD)("clicked"),disabled}),help,error,disabled,maxValue,minValue,maxLength,minLength,readOnly,autoComplete,onChange:(0,dist.aD)("change"),onFocus:(0,dist.aD)("focus"),onBlur:(0,dist.aD)("blur"),spaceAfter,id})};WithError.story={name:"With error",parameters:{info:"Some description about this type of InputField in general."}};const WithHelp=()=>{const type=(0,addon_knobs_dist.select)("Type",Object.values(consts.nq),consts.nq.TEXT),name=(0,addon_knobs_dist.text)("Name","input"),label=(0,addon_knobs_dist.text)("Label","Label"),inlineLabel=(0,addon_knobs_dist.boolean)("inline label",!0),value=(0,addon_knobs_dist.text)("Value",""),placeholder=(0,addon_knobs_dist.text)("Placeholder","Placeholder"),Prefix=getIcon(getIcons("Prefix","Search")),Suffix=getIcon(getIcons("Suffix","Visibility")),help=(0,addon_knobs_dist.text)("Help","Please fill out as you have on your passport"),error=(0,addon_knobs_dist.text)("Error",""),disabled=(0,addon_knobs_dist.boolean)("Disabled",!1),maxValue=(0,addon_knobs_dist.number)("maxValue",NaN),minValue=(0,addon_knobs_dist.number)("minValue",NaN),required=(0,addon_knobs_dist.boolean)("required",!1),maxLength=(0,addon_knobs_dist.number)("maxLength",NaN),minLength=(0,addon_knobs_dist.number)("minLength",NaN),readOnly=(0,addon_knobs_dist.boolean)("readOnly",!1),autoComplete=(0,addon_knobs_dist.text)("autoComplete","off"),dataTest=(0,addon_knobs_dist.text)("dataTest","test"),spaceAfter=(0,addon_knobs_dist.select)("spaceAfter",Object.values(getSpacingToken_consts.Z),getSpacingToken_consts.Z.MEDIUM),id=(0,addon_knobs_dist.text)("id","ID");return react.createElement(InputField.ZP,{type,name,label,inlineLabel,value,dataTest,placeholder,required,prefix:Prefix&&react.createElement(Prefix,null),suffix:Suffix&&react.createElement(ButtonLink.Z,{iconLeft:react.createElement(Suffix,null),compact:!0,size:"normal",onClick:(0,dist.aD)("clicked"),disabled}),help,error,disabled,maxValue,minValue,maxLength,minLength,readOnly,autoComplete,onChange:(0,dist.aD)("change"),onFocus:(0,dist.aD)("focus"),onBlur:(0,dist.aD)("blur"),spaceAfter,id})};WithHelp.story={name:"With help",parameters:{info:"Some description about this type of InputField in general."}};const Playground=()=>{const type=(0,addon_knobs_dist.select)("Type",Object.values(consts.nq),consts.nq.TEXT),name=(0,addon_knobs_dist.text)("Name","input"),label=(0,addon_knobs_dist.text)("Label","Label"),inlineLabel=(0,addon_knobs_dist.boolean)("inline label",!1),value=(0,addon_knobs_dist.text)("Value",""),placeholder=(0,addon_knobs_dist.text)("Placeholder","Placeholder"),Prefix=getIcon(getIcons("Prefix","Search")),Suffix=getIcon(getIcons("Suffix","Visibility")),help=(0,addon_knobs_dist.text)("Help",""),error=(0,addon_knobs_dist.text)("Error",""),disabled=(0,addon_knobs_dist.boolean)("Disabled",!1),width=(0,addon_knobs_dist.text)("width",""),maxValue=(0,addon_knobs_dist.number)("maxValue",NaN),minValue=(0,addon_knobs_dist.number)("minValue",NaN),required=(0,addon_knobs_dist.boolean)("required",!1),maxLength=(0,addon_knobs_dist.number)("maxLength",NaN),minLength=(0,addon_knobs_dist.number)("minLength",NaN),readOnly=(0,addon_knobs_dist.boolean)("readOnly",!1),autoComplete=(0,addon_knobs_dist.text)("autoComplete","off"),dataTest=(0,addon_knobs_dist.text)("dataTest","test"),spaceAfter=(0,addon_knobs_dist.select)("spaceAfter",Object.values(getSpacingToken_consts.Z),getSpacingToken_consts.Z.SMALL),id=(0,addon_knobs_dist.text)("id","ID"),inputMode=(0,addon_knobs_dist.select)("inputMode",Object.values(consts.Eq),consts.Eq.TEXT),dataAttrs=(0,addon_knobs_dist.object)("dataAttrs",{"data-recording-ignore":!0});return react.createElement(InputField.ZP,{type,width,name,label,inlineLabel,value,dataTest,placeholder,required,prefix:Prefix&&react.createElement(Prefix,null),suffix:Suffix&&react.createElement(ButtonLink.Z,{type:"primary",size:"normal",iconLeft:react.createElement(Suffix,null),onClick:(0,dist.aD)("clicked"),disabled,compact:!0}),help,error,disabled,maxValue,minValue,maxLength,minLength,readOnly,autoComplete,onChange:(0,dist.aD)("change"),onFocus:(0,dist.aD)("focus"),onBlur:(0,dist.aD)("blur"),onMouseUp:(0,dist.aD)("onMouseUp"),onMouseDown:(0,dist.aD)("onMouseDown"),onSelect:(0,dist.aD)("onSelect"),onKeyDown:(0,dist.aD)("onKeyDown"),spaceAfter,id,inputMode,dataAttrs})};Playground.story={parameters:{info:"Some description about this type of InputField in general."}};const Rtl=()=>{const help=(0,addon_knobs_dist.text)("Help","Please fill out as you have on your passport"),error=(0,addon_knobs_dist.text)("Error",""),inlineLabel=(0,addon_knobs_dist.boolean)("inline label",!1),label=(0,addon_knobs_dist.text)("Label","");return react.createElement(RenderInRtl.Z,null,react.createElement(InputField.ZP,{label,inlineLabel,help,error,placeholder:"Placeholder",prefix:"$",suffix:react.createElement(ButtonLink.Z,{compact:!0,iconLeft:react.createElement(Visibility.Z,null)})}))};Rtl.story={name:"RTL",parameters:{info:"This is a preview of this component in RTL setup."}},DefaultInput.parameters={...DefaultInput.parameters,docs:{...DefaultInput.parameters?.docs,source:{originalSource:'() => {\n  const label = text("Label", "Label");\n  const value = text("Value", "");\n  const placeholder = text("Placeholder", "Placeholder");\n  return <InputField label={label} value={value} placeholder={placeholder} onChange={action("change")} />;\n}',...DefaultInput.parameters?.docs?.source}}},NumberInput.parameters={...NumberInput.parameters,docs:{...NumberInput.parameters?.docs,source:{originalSource:'() => {\n  const label = text("Label", "Number");\n  const value = text("Value", "2");\n  const placeholder = text("Placeholder", "Number");\n  const maxValue = number("maxValue", 3);\n  const minValue = number("minValue", 1);\n  return <InputField type="number" label={label} value={value} placeholder={placeholder} maxValue={maxValue} minValue={minValue} onChange={action("change")} />;\n}',...NumberInput.parameters?.docs?.source}}},PasswordInput.parameters={...PasswordInput.parameters,docs:{...PasswordInput.parameters?.docs,source:{originalSource:'() => {\n  const label = text("Label", "Password");\n  const value = text("Value", "p422W0rd");\n  const placeholder = text("Placeholder", "Password");\n  return <InputField type="password" label={label} value={value} placeholder={placeholder} onChange={action("change")} />;\n}',...PasswordInput.parameters?.docs?.source}}},PassportOrIdInput.parameters={...PassportOrIdInput.parameters,docs:{...PassportOrIdInput.parameters?.docs,source:{originalSource:'() => {\n  const label = text("Label", "Passport or ID number");\n  const placeholder = text("Placeholder", "588539238");\n  return <InputField type="passportid" label={label} placeholder={placeholder} onChange={action("change")} />;\n}',...PassportOrIdInput.parameters?.docs?.source}}},EmailInput.parameters={...EmailInput.parameters,docs:{...EmailInput.parameters?.docs,source:{originalSource:'() => {\n  const label = text("Label", "Email");\n  const value = text("Value", "name@example.co");\n  const placeholder = text("Placeholder", "Email");\n  return <InputField type="email" label={label} value={value} placeholder={placeholder} onChange={action("change")} help={<div>\n          Did you mean&nbsp;\n          <TextLink onClick={action("clicked")}>name@example.com</TextLink>?\n        </div>} />;\n}',...EmailInput.parameters?.docs?.source}}},WithTextPrefix.parameters={...WithTextPrefix.parameters,docs:{...WithTextPrefix.parameters?.docs,source:{originalSource:'() => {\n  const label = text("Label", "Label");\n  const value = text("Value", "");\n  const placeholder = text("Placeholder", "Placeholder");\n  const prefix = text("Prefix", "$");\n  return <InputField label={label} value={value} placeholder={placeholder} prefix={prefix} onChange={action("change")} />;\n}',...WithTextPrefix.parameters?.docs?.source}}},WithTextSuffix.parameters={...WithTextSuffix.parameters,docs:{...WithTextSuffix.parameters?.docs,source:{originalSource:'() => {\n  const label = text("Label", "Label");\n  const value = text("Value", "");\n  const placeholder = text("Placeholder", "Placeholder");\n  const suffix = text("Suffix", "Some long text");\n  return <InputField label={label} value={value} placeholder={placeholder} suffix={<div style={{\n    paddingRight: "12px"\n  }}>{suffix}</div>} onChange={action("change")} />;\n}',...WithTextSuffix.parameters?.docs?.source}}},CompactInput.parameters={...CompactInput.parameters,docs:{...CompactInput.parameters?.docs,source:{originalSource:'() => {\n  const value = text("Value", "");\n  const label = text("Label", "Label");\n  const placeholder = text("Placeholder", "Placeholder");\n  const required = boolean("required", false);\n  const error = text("Error", "");\n  return <InputField label={label} inlineLabel error={error} value={value} placeholder={placeholder} required={required} onChange={action("change")} />;\n}',...CompactInput.parameters?.docs?.source}}},CompactInputWithTags.parameters={...CompactInputWithTags.parameters,docs:{...CompactInputWithTags.parameters?.docs,source:{originalSource:'() => {\n  const value = text("Value", "");\n  const label = text("Label", "Label");\n  const placeholder = text("Placeholder", "Placeholder");\n  const required = boolean("required", false);\n  const error = text("Error", "");\n  return <InputField label={label} inlineLabel tags={<>\n          <Tag selected onRemove={action("onRemove")}>\n            Brno\n          </Tag>\n          <Tag onRemove={action("onRemove")}>Praha</Tag>\n          <Tag onRemove={action("onRemove")}>Praha</Tag>\n          <Tag onRemove={action("onRemove")}>Praha</Tag>\n          <Tag onRemove={action("onRemove")}>Praha</Tag>\n          <Tag onRemove={action("onRemove")}>Praha</Tag>\n          <Tag onRemove={action("onRemove")}>Praha</Tag>\n          <Tag onRemove={action("onRemove")}>Praha</Tag>\n          <Tag onRemove={action("onRemove")}>Praha</Tag>\n          <Tag onRemove={action("onRemove")}>Praha</Tag>\n          <Tag onRemove={action("onRemove")}>Praha</Tag>\n          <Tag onRemove={action("onRemove")}>Praha</Tag>\n          <Tag onRemove={action("onRemove")}>Praha</Tag>\n          <Tag onRemove={action("onRemove")}>Praha</Tag>\n          <Tag onRemove={action("onRemove")}>Praha</Tag>\n          <Tag onRemove={action("onRemove")}>Praha</Tag>\n          <Tag onRemove={action("onRemove")}>Praha</Tag>\n          <Tag onRemove={action("onRemove")}>Praha</Tag>\n          <Tag onRemove={action("onRemove")}>Praha</Tag>\n          <Tag onRemove={action("onRemove")}>Praha</Tag>\n        </>} error={error} value={value} placeholder={placeholder} required={required} onChange={action("change")} />;\n}',...CompactInputWithTags.parameters?.docs?.source}}},RequiredField.parameters={...RequiredField.parameters,docs:{...RequiredField.parameters?.docs,source:{originalSource:'() => {\n  const label = text("Label", "Label");\n  const value = text("Value", "");\n  const required = boolean("required", true);\n  const placeholder = text("Placeholder", "Placeholder");\n  return <InputField label={label} value={value} placeholder={placeholder} required={required} onChange={action("change")} />;\n}',...RequiredField.parameters?.docs?.source}}},WithIconPrefix.parameters={...WithIconPrefix.parameters,docs:{...WithIconPrefix.parameters?.docs,source:{originalSource:'() => {\n  const label = text("Label", "Label");\n  const value = text("Value", "");\n  const placeholder = text("Placeholder", "Placeholder");\n  const Prefix = getIcon(getIcons("Prefix", "Search"));\n  return <InputField label={label} value={value} placeholder={placeholder} prefix={Prefix && <Prefix />} onChange={action("change")} />;\n}',...WithIconPrefix.parameters?.docs?.source}}},WithButtonLinkSuffix.parameters={...WithButtonLinkSuffix.parameters,docs:{...WithButtonLinkSuffix.parameters?.docs,source:{originalSource:'() => {\n  const label = text("Label", "Label");\n  const value = text("Value", "");\n  const placeholder = text("Placeholder", "Placeholder");\n  const Suffix = getIcon(getIcons("Suffix", "Visibility"));\n  return <InputField label={label} value={value} placeholder={placeholder} suffix={Suffix && <ButtonLink type="primary" compact iconLeft={<Suffix />} onClick={action("clicked")} />} onChange={action("change")} />;\n}',...WithButtonLinkSuffix.parameters?.docs?.source}}},WithServiceLogoPrefix.parameters={...WithServiceLogoPrefix.parameters,docs:{...WithServiceLogoPrefix.parameters?.docs,source:{originalSource:'() => {\n  const label = text("Label", "Label");\n  const value = text("Value", "");\n  const placeholder = text("Placeholder", "Placeholder");\n  const name = select("Type", Object.values(NAME_OPTIONS), NAME_OPTIONS.AIRHELP);\n  const grayScale = boolean("GrayScale", false);\n  return <InputField label={label} value={value} placeholder={placeholder} suffix={<ServiceLogo name={name} grayScale={grayScale} />} onChange={action("change")} />;\n}',...WithServiceLogoPrefix.parameters?.docs?.source}}},WithError.parameters={...WithError.parameters,docs:{...WithError.parameters?.docs,source:{originalSource:'() => {\n  const type = select("Type", Object.values(TYPE_OPTIONS), TYPE_OPTIONS.TEXT);\n  const name = text("Name", "input");\n  const label = text("Label", "");\n  const inlineLabel = boolean("inline label", true);\n  const value = text("Value", "");\n  const placeholder = text("Placeholder", "Placeholder");\n  const Prefix = getIcon(getIcons("Prefix", "Search"));\n  const Suffix = getIcon(getIcons("Suffix", "Visibility"));\n  const help = text("Help", "");\n  const error = text("Error", "Please fill out as you have on your passport");\n  const disabled = boolean("Disabled", false);\n  const maxValue = number("maxValue", NaN);\n  const minValue = number("minValue", NaN);\n  const required = boolean("required", false);\n  const maxLength = number("maxLength", NaN);\n  const minLength = number("minLength", NaN);\n  const readOnly = boolean("readOnly", false);\n  const autoComplete = text("autoComplete", "off");\n  const dataTest = text("dataTest", "test");\n  const spaceAfter = select("spaceAfter", SPACINGS_AFTER, SPACINGS_AFTER.MEDIUM);\n  const id = text("id", "ID");\n  return <InputField type={type} name={name} label={label} inlineLabel={inlineLabel} value={value} dataTest={dataTest} placeholder={placeholder} required={required} prefix={Prefix && <Prefix />} suffix={Suffix && <ButtonLink iconLeft={<Suffix />} compact size="normal" onClick={action("clicked")} disabled={disabled} />} help={help} error={error} disabled={disabled} maxValue={maxValue} minValue={minValue} maxLength={maxLength} minLength={minLength} readOnly={readOnly} autoComplete={autoComplete} onChange={action("change")} onFocus={action("focus")} onBlur={action("blur")} spaceAfter={spaceAfter} id={id} />;\n}',...WithError.parameters?.docs?.source}}},WithHelp.parameters={...WithHelp.parameters,docs:{...WithHelp.parameters?.docs,source:{originalSource:'() => {\n  const type = select("Type", Object.values(TYPE_OPTIONS), TYPE_OPTIONS.TEXT);\n  const name = text("Name", "input");\n  const label = text("Label", "Label");\n  const inlineLabel = boolean("inline label", true);\n  const value = text("Value", "");\n  const placeholder = text("Placeholder", "Placeholder");\n  const Prefix = getIcon(getIcons("Prefix", "Search"));\n  const Suffix = getIcon(getIcons("Suffix", "Visibility"));\n  const help = text("Help", "Please fill out as you have on your passport");\n  const error = text("Error", "");\n  const disabled = boolean("Disabled", false);\n  const maxValue = number("maxValue", NaN);\n  const minValue = number("minValue", NaN);\n  const required = boolean("required", false);\n  const maxLength = number("maxLength", NaN);\n  const minLength = number("minLength", NaN);\n  const readOnly = boolean("readOnly", false);\n  const autoComplete = text("autoComplete", "off");\n  const dataTest = text("dataTest", "test");\n  const spaceAfter = select("spaceAfter", Object.values(SPACINGS_AFTER), SPACINGS_AFTER.MEDIUM);\n  const id = text("id", "ID");\n  return <InputField type={type} name={name} label={label} inlineLabel={inlineLabel} value={value} dataTest={dataTest} placeholder={placeholder} required={required} prefix={Prefix && <Prefix />} suffix={Suffix && <ButtonLink iconLeft={<Suffix />} compact size="normal" onClick={action("clicked")} disabled={disabled} />} help={help} error={error} disabled={disabled} maxValue={maxValue} minValue={minValue} maxLength={maxLength} minLength={minLength} readOnly={readOnly} autoComplete={autoComplete} onChange={action("change")} onFocus={action("focus")} onBlur={action("blur")} spaceAfter={spaceAfter} id={id} />;\n}',...WithHelp.parameters?.docs?.source}}},Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:'() => {\n  const type = select("Type", Object.values(TYPE_OPTIONS), TYPE_OPTIONS.TEXT);\n  const name = text("Name", "input");\n  const label = text("Label", "Label");\n  const inlineLabel = boolean("inline label", false);\n  const value = text("Value", "");\n  const placeholder = text("Placeholder", "Placeholder");\n  const Prefix = getIcon(getIcons("Prefix", "Search"));\n  const Suffix = getIcon(getIcons("Suffix", "Visibility"));\n  const help = text("Help", "");\n  const error = text("Error", "");\n  const disabled = boolean("Disabled", false);\n  const width = text("width", "");\n  const maxValue = number("maxValue", NaN);\n  const minValue = number("minValue", NaN);\n  const required = boolean("required", false);\n  const maxLength = number("maxLength", NaN);\n  const minLength = number("minLength", NaN);\n  const readOnly = boolean("readOnly", false);\n  const autoComplete = text("autoComplete", "off");\n  const dataTest = text("dataTest", "test");\n  const spaceAfter = select("spaceAfter", Object.values(SPACINGS_AFTER), SPACINGS_AFTER.SMALL);\n  const id = text("id", "ID");\n  const inputMode = select("inputMode", Object.values(INPUTMODE), INPUTMODE.TEXT);\n  const dataAttrs = object("dataAttrs", {\n    "data-recording-ignore": true\n  });\n  return <InputField type={type} width={width} name={name} label={label} inlineLabel={inlineLabel} value={value} dataTest={dataTest} placeholder={placeholder} required={required} prefix={Prefix && <Prefix />} suffix={Suffix && <ButtonLink type="primary" size="normal" iconLeft={<Suffix />} onClick={action("clicked")} disabled={disabled} compact />} help={help} error={error} disabled={disabled} maxValue={maxValue} minValue={minValue} maxLength={maxLength} minLength={minLength} readOnly={readOnly} autoComplete={autoComplete} onChange={action("change")} onFocus={action("focus")} onBlur={action("blur")} onMouseUp={action("onMouseUp")} onMouseDown={action("onMouseDown")} onSelect={action("onSelect")} onKeyDown={action("onKeyDown")} spaceAfter={spaceAfter} id={id} inputMode={inputMode} dataAttrs={dataAttrs} />;\n}',...Playground.parameters?.docs?.source}}},Rtl.parameters={...Rtl.parameters,docs:{...Rtl.parameters?.docs,source:{originalSource:'() => {\n  const help = text("Help", "Please fill out as you have on your passport");\n  const error = text("Error", "");\n  const inlineLabel = boolean("inline label", false);\n  const label = text("Label", "");\n  return <RenderInRtl>\n      <InputField label={label} inlineLabel={inlineLabel} help={help} error={error} placeholder="Placeholder" prefix="$" suffix={<ButtonLink compact iconLeft={<Icons.Visibility />} />} />\n    </RenderInRtl>;\n}',...Rtl.parameters?.docs?.source}}};const __namedExportsOrder=["DefaultInput","NumberInput","PasswordInput","PassportOrIdInput","EmailInput","WithTextPrefix","WithTextSuffix","CompactInput","CompactInputWithTags","RequiredField","WithIconPrefix","WithButtonLinkSuffix","WithServiceLogoPrefix","WithError","WithHelp","Playground","Rtl"]},"./src/ButtonLink/consts.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{e:()=>TOKENS,v:()=>TYPES});let TYPES=function(TYPES){return TYPES.PRIMARY="primary",TYPES.SECONDARY="secondary",TYPES.CRITICAL="critical",TYPES}({}),TOKENS=function(TOKENS){return TOKENS.background="background",TOKENS.backgroundHover="backgroundHover",TOKENS.backgroundActive="backgroundActive",TOKENS.foreground="foreground",TOKENS.foregroundHover="foregroundHover",TOKENS.foregroundActive="foregroundActive",TOKENS.marginRightIcon="marginRightIcon",TOKENS}({})},"./src/ButtonLink/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>src_ButtonLink});var esm_extends=__webpack_require__("../../node_modules/@babel/runtime/helpers/esm/extends.js"),react=__webpack_require__("../../node_modules/react/index.js"),consts=__webpack_require__("./src/ButtonLink/consts.ts"),ButtonPrimitive=__webpack_require__("./src/primitives/ButtonPrimitive/index.tsx"),useTheme=__webpack_require__("./src/hooks/useTheme/index.ts"),getIconContainer=__webpack_require__("./src/primitives/ButtonPrimitive/common/getIconContainer.ts");const helpers_getButtonLinkTypeToken=(name,type,theme)=>({[consts.e.background]:{[consts.v.PRIMARY]:theme.orbit.backgroundButtonLinkPrimary,[consts.v.SECONDARY]:theme.orbit.backgroundButtonLinkSecondary,[consts.v.CRITICAL]:theme.orbit.backgroundButtonLinkCritical},[consts.e.backgroundHover]:{[consts.v.PRIMARY]:theme.orbit.backgroundButtonLinkPrimaryHover,[consts.v.SECONDARY]:theme.orbit.backgroundButtonLinkSecondaryHover,[consts.v.CRITICAL]:theme.orbit.backgroundButtonLinkCriticalHover},[consts.e.backgroundActive]:{[consts.v.PRIMARY]:theme.orbit.backgroundButtonLinkPrimaryActive,[consts.v.SECONDARY]:theme.orbit.backgroundButtonLinkSecondaryActive,[consts.v.CRITICAL]:theme.orbit.backgroundButtonLinkCriticalActive},[consts.e.foreground]:{[consts.v.PRIMARY]:theme.orbit.colorTextButtonLinkPrimary,[consts.v.SECONDARY]:theme.orbit.colorTextButtonLinkSecondary,[consts.v.CRITICAL]:theme.orbit.colorTextButtonLinkCritical},[consts.e.foregroundHover]:{[consts.v.PRIMARY]:theme.orbit.colorTextButtonLinkPrimaryHover,[consts.v.SECONDARY]:theme.orbit.colorTextButtonLinkSecondaryHover,[consts.v.CRITICAL]:theme.orbit.colorTextButtonLinkCriticalHover},[consts.e.foregroundActive]:{[consts.v.PRIMARY]:theme.orbit.colorTextButtonLinkPrimaryActive,[consts.v.SECONDARY]:theme.orbit.colorTextButtonLinkSecondaryActive,[consts.v.CRITICAL]:theme.orbit.colorTextButtonLinkCriticalActive}}[name][type]),helpers_getButtonLinkStyles=({type,theme,compact})=>{const wrappedTypeToken=name=>helpers_getButtonLinkTypeToken(name,type,theme),commonStyles={background:wrappedTypeToken(consts.e.background),foreground:wrappedTypeToken(consts.e.foreground),foregroundHover:wrappedTypeToken(consts.e.foregroundHover),foregroundActive:wrappedTypeToken(consts.e.foregroundActive),foregroundFocus:wrappedTypeToken(consts.e.foregroundActive)};return compact?type===consts.v.SECONDARY?{...commonStyles,foregroundHover:theme.orbit.colorTextButtonLinkSecondaryCompactHover,foregroundActive:theme.orbit.colorTextButtonLinkSecondaryCompactHover,foregroundFocus:theme.orbit.colorTextButtonLinkSecondaryCompactActive}:commonStyles:{backgroundHover:wrappedTypeToken(consts.e.backgroundHover),backgroundActive:wrappedTypeToken(consts.e.backgroundActive),backgroundFocus:wrappedTypeToken(consts.e.backgroundActive),...commonStyles}},helpers_getButtonLinkIconForeground=({type,theme,compact})=>{return compact&&type===consts.v.SECONDARY?{foreground:helpers_getButtonLinkTypeToken(consts.e.foreground,type,theme),foregroundHover:theme.orbit.colorTextButtonLinkSecondaryCompactHover,foregroundActive:theme.orbit.colorTextButtonLinkSecondaryCompactHover,foregroundFocus:theme.orbit.colorTextButtonLinkSecondaryCompactActive}:(usedType=type,{foreground:helpers_getButtonLinkTypeToken(consts.e.foreground,type,theme),foregroundHover:helpers_getButtonLinkTypeToken(consts.e.foregroundHover,usedType,theme),foregroundActive:helpers_getButtonLinkTypeToken(consts.e.foregroundActive,usedType,theme),foregroundFocus:helpers_getButtonLinkTypeToken(consts.e.foregroundActive,usedType,theme)});var usedType};var getCommonProps=__webpack_require__("./src/primitives/ButtonPrimitive/common/getCommonProps.ts");const helpers_getButtonLinkCommonProps=props=>props.compact?{...(0,getCommonProps.Z)(props),padding:"0"}:(0,getCommonProps.Z)(props),ButtonLink=react.forwardRef((({type=consts.v.PRIMARY,size,compact=!1,...props},ref)=>{const theme=(0,useTheme.Z)(),propsWithTheme={theme,size,...props},commonProps=helpers_getButtonLinkCommonProps({...propsWithTheme,compact}),buttonLinkStyles=helpers_getButtonLinkStyles({type,theme,compact}),icons=(0,getIconContainer.Z)({...propsWithTheme,iconForeground:helpers_getButtonLinkIconForeground({type,theme,compact})});return react.createElement(ButtonPrimitive.Z,(0,esm_extends.Z)({ref},props,buttonLinkStyles,commonProps,icons))}));ButtonLink.displayName="ButtonLink";const src_ButtonLink=ButtonLink;try{ButtonLink.displayName="ButtonLink",ButtonLink.__docgenInfo={description:"",displayName:"ButtonLink",props:{compact:{defaultValue:{value:"false"},description:"",name:"compact",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:"TYPES.PRIMARY"},description:"",name:"type",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"critical"'}]}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"normal"'},{value:'"large"'}]}},dataTest:{defaultValue:null,description:"",name:"dataTest",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},spaceAfter:{defaultValue:null,description:"",name:"spaceAfter",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"none"'},{value:'"smallest"'},{value:'"normal"'},{value:'"large"'},{value:'"largest"'}]}},asComponent:{defaultValue:null,description:"",name:"asComponent",required:!1,type:{name:"Component"}},ariaControls:{defaultValue:null,description:"",name:"ariaControls",required:!1,type:{name:"string"}},ariaCurrent:{defaultValue:null,description:"",name:"ariaCurrent",required:!1,type:{name:"string"}},ariaExpanded:{defaultValue:null,description:"",name:"ariaExpanded",required:!1,type:{name:"boolean"}},ariaLabelledby:{defaultValue:null,description:"",name:"ariaLabelledby",required:!1,type:{name:"string"}},centered:{defaultValue:null,description:"",name:"centered",required:!1,type:{name:"boolean"}},circled:{defaultValue:null,description:"",name:"circled",required:!1,type:{name:"boolean"}},underlined:{defaultValue:null,description:"",name:"underlined",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},download:{defaultValue:null,description:"",name:"download",required:!1,type:{name:"string | boolean"}},external:{defaultValue:null,description:"",name:"external",required:!1,type:{name:"boolean"}},fullWidth:{defaultValue:null,description:"",name:"fullWidth",required:!1,type:{name:"boolean"}},href:{defaultValue:null,description:"",name:"href",required:!1,type:{name:"string"}},iconLeft:{defaultValue:null,description:"",name:"iconLeft",required:!1,type:{name:"ReactNode"}},iconRight:{defaultValue:null,description:"",name:"iconRight",required:!1,type:{name:"ReactNode"}},loading:{defaultValue:null,description:"",name:"loading",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"Event<SyntheticEvent<HTMLButtonElement | HTMLAnchorElement, Event>>"}},rel:{defaultValue:null,description:"",name:"rel",required:!1,type:{name:"string"}},role:{defaultValue:null,description:"",name:"role",required:!1,type:{name:"string"}},submit:{defaultValue:null,description:"",name:"submit",required:!1,type:{name:"boolean"}},contentAlign:{defaultValue:null,description:"",name:"contentAlign",required:!1,type:{name:"string | null"}},contentWidth:{defaultValue:null,description:"",name:"contentWidth",required:!1,type:{name:"string | null"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},tabIndex:{defaultValue:null,description:"",name:"tabIndex",required:!1,type:{name:"string | number"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/ButtonLink/index.tsx#ButtonLink"]={docgenInfo:ButtonLink.__docgenInfo,name:"ButtonLink",path:"src/ButtonLink/index.tsx#ButtonLink"})}catch(__react_docgen_typescript_loader_error){}},"./src/primitives/ButtonPrimitive/common/consts.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{eT:()=>TOKENS,lx:()=>SIZE_OPTIONS,rd:()=>BUTTON_STATES});let SIZE_OPTIONS=function(SIZE_OPTIONS){return SIZE_OPTIONS.SMALL="small",SIZE_OPTIONS.NORMAL="normal",SIZE_OPTIONS.LARGE="large",SIZE_OPTIONS}({}),TOKENS=function(TOKENS){return TOKENS.heightButton="heightButton",TOKENS.fontSizeButton="fontSizeButton",TOKENS.paddingButton="paddingButton",TOKENS.paddingButtonWithIcons="paddingButtonWithIcons",TOKENS.paddingButtonWithLeftIcon="paddingButtonWithLeftIcon",TOKENS.paddingButtonWithRightIcon="paddingButtonWithRightIcon",TOKENS.spinnerWidth="spinnerWidth",TOKENS.spinnerHeight="spinnerHeight",TOKENS.marginRightIcon="marginRightIcon",TOKENS}({}),BUTTON_STATES=function(BUTTON_STATES){return BUTTON_STATES.DEFAULT="default",BUTTON_STATES.HOVER="hover",BUTTON_STATES.ACTIVE="active",BUTTON_STATES.FOCUS="focus",BUTTON_STATES}({})},"./src/primitives/ButtonPrimitive/common/getCommonProps.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>common_getCommonProps});var consts=__webpack_require__("./src/primitives/ButtonPrimitive/common/consts.ts");const common_getSizeToken=(size,theme)=>{const tokens={[consts.eT.heightButton]:{[consts.lx.LARGE]:theme.orbit.heightButtonLarge,[consts.lx.NORMAL]:theme.orbit.heightButtonNormal,[consts.lx.SMALL]:theme.orbit.heightButtonSmall},[consts.eT.fontSizeButton]:{[consts.lx.LARGE]:theme.orbit.fontSizeButtonLarge,[consts.lx.NORMAL]:theme.orbit.fontSizeButtonNormal,[consts.lx.SMALL]:theme.orbit.fontSizeButtonSmall},[consts.eT.spinnerWidth]:{[consts.lx.LARGE]:theme.orbit.widthIconMedium,[consts.lx.NORMAL]:theme.orbit.widthIconMedium,[consts.lx.SMALL]:theme.orbit.widthIconSmall},[consts.eT.spinnerHeight]:{[consts.lx.LARGE]:theme.orbit.heightIconMedium,[consts.lx.NORMAL]:theme.orbit.heightIconMedium,[consts.lx.SMALL]:theme.orbit.heightIconSmall}};return{height:tokens[consts.eT.heightButton][size],fontSize:tokens[consts.eT.fontSizeButton][size]}};var getPadding=__webpack_require__("./src/primitives/ButtonPrimitive/common/getPadding.ts");const common_getCommonProps=({width,size=consts.lx.NORMAL,theme,iconRight,contentAlign,contentWidth,fullWidth,centered,iconLeft,children})=>{const onlyIcon=Boolean((iconLeft||iconRight)&&!children),hasCenteredContent=Boolean(onlyIcon||children&&!(iconLeft||iconRight)||fullWidth&&centered);return{...common_getSizeToken(size,theme),width,padding:(0,getPadding.Z)(onlyIcon,iconRight,iconLeft,size,theme),fontWeight:theme.orbit.fontWeightMedium,contentAlign:contentAlign||(onlyIcon||hasCenteredContent?"center":"space-between"),contentWidth:contentWidth||(fullWidth&&centered?void 0:"100%")}}},"./src/primitives/ButtonPrimitive/common/getIconContainer.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _consts__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/primitives/ButtonPrimitive/common/consts.ts"),_utils_rtl__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/utils/rtl/index.ts"),_Icon__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/Icon/index.tsx"),_Icon_consts__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/Icon/consts.ts");const getIconSpacing=(onlyIcon,theme)=>onlyIcon?null:{leftMargin:(0,_utils_rtl__WEBPACK_IMPORTED_MODULE_0__.Rl)(`0 ${theme.orbit.marginButtonIcon} 0 0`)({theme}),rightMargin:(0,_utils_rtl__WEBPACK_IMPORTED_MODULE_0__.Rl)(`0 0 0 ${theme.orbit.marginButtonIcon}`)({theme})},__WEBPACK_DEFAULT_EXPORT__=({iconLeft,children,theme,size=_consts__WEBPACK_IMPORTED_MODULE_1__.lx.NORMAL,iconForeground})=>{const sizeIcon=(size=>size===_consts__WEBPACK_IMPORTED_MODULE_1__.lx.SMALL?_Icon_consts__WEBPACK_IMPORTED_MODULE_2__.O.SMALL:size===_consts__WEBPACK_IMPORTED_MODULE_1__.lx.LARGE?_Icon_consts__WEBPACK_IMPORTED_MODULE_2__.O.LARGE:_Icon_consts__WEBPACK_IMPORTED_MODULE_2__.O.MEDIUM)(size),computedSize=(0,_Icon__WEBPACK_IMPORTED_MODULE_3__.a)(sizeIcon)({theme}),onlyIcon=Boolean(iconLeft&&!children);return{icons:{height:computedSize,width:computedSize,...getIconSpacing(onlyIcon,theme),...iconForeground}}}},"./src/primitives/ButtonPrimitive/common/getPadding.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _utils_rtl__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/utils/rtl/index.ts"),_consts__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/primitives/ButtonPrimitive/common/consts.ts");const __WEBPACK_DEFAULT_EXPORT__=(onlyIcon,iconRight,iconLeft,size,theme)=>{const wrappedRtl=value=>(0,_utils_rtl__WEBPACK_IMPORTED_MODULE_0__.Rl)(value)({theme});if(onlyIcon)return wrappedRtl(theme.orbit.paddingButtonWithoutText);const tokens={[_consts__WEBPACK_IMPORTED_MODULE_1__.eT.paddingButton]:{[_consts__WEBPACK_IMPORTED_MODULE_1__.lx.LARGE]:theme.orbit.paddingButtonLarge,[_consts__WEBPACK_IMPORTED_MODULE_1__.lx.NORMAL]:theme.orbit.paddingButtonNormal,[_consts__WEBPACK_IMPORTED_MODULE_1__.lx.SMALL]:theme.orbit.paddingButtonSmall},[_consts__WEBPACK_IMPORTED_MODULE_1__.eT.paddingButtonWithIcons]:{[_consts__WEBPACK_IMPORTED_MODULE_1__.lx.LARGE]:theme.orbit.paddingButtonLargeWithIcons,[_consts__WEBPACK_IMPORTED_MODULE_1__.lx.NORMAL]:theme.orbit.paddingButtonNormalWithIcons,[_consts__WEBPACK_IMPORTED_MODULE_1__.lx.SMALL]:theme.orbit.paddingButtonSmallWithIcons},[_consts__WEBPACK_IMPORTED_MODULE_1__.eT.paddingButtonWithLeftIcon]:{[_consts__WEBPACK_IMPORTED_MODULE_1__.lx.LARGE]:theme.orbit.paddingButtonLargeWithLeftIcon,[_consts__WEBPACK_IMPORTED_MODULE_1__.lx.NORMAL]:theme.orbit.paddingButtonNormalWithLeftIcon,[_consts__WEBPACK_IMPORTED_MODULE_1__.lx.SMALL]:theme.orbit.paddingButtonSmallWithLeftIcon},[_consts__WEBPACK_IMPORTED_MODULE_1__.eT.paddingButtonWithRightIcon]:{[_consts__WEBPACK_IMPORTED_MODULE_1__.lx.LARGE]:theme.orbit.paddingButtonLargeWithRightIcon,[_consts__WEBPACK_IMPORTED_MODULE_1__.lx.NORMAL]:theme.orbit.paddingButtonNormalWithRightIcon,[_consts__WEBPACK_IMPORTED_MODULE_1__.lx.SMALL]:theme.orbit.paddingButtonSmallWithRightIcon}};return wrappedRtl(iconLeft&&iconRight?tokens[_consts__WEBPACK_IMPORTED_MODULE_1__.eT.paddingButtonWithIcons][size]:iconLeft&&!iconRight?tokens[_consts__WEBPACK_IMPORTED_MODULE_1__.eT.paddingButtonWithLeftIcon][size]:!iconLeft&&iconRight?tokens[_consts__WEBPACK_IMPORTED_MODULE_1__.eT.paddingButtonWithRightIcon][size]:tokens[_consts__WEBPACK_IMPORTED_MODULE_1__.eT.paddingButton][size])}},"./src/utils/rtl/RenderInRtl.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_kiwicom_orbit_design_tokens__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../orbit-design-tokens/dist/index.js"),_OrbitProvider__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/OrbitProvider/index.tsx");class RenderInRtl extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(...args){super(...args),this.html=document.querySelector("html")}componentDidMount(){this.html&&this.html.setAttribute("dir","rtl")}componentWillUnmount(){this.html&&this.html.removeAttribute("dir")}render(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_OrbitProvider__WEBPACK_IMPORTED_MODULE_2__.Z,{theme:{orbit:_kiwicom_orbit_design_tokens__WEBPACK_IMPORTED_MODULE_1__.eF,rtl:!0}},this.props.children)}}RenderInRtl.displayName="RenderInRtl";const __WEBPACK_DEFAULT_EXPORT__=RenderInRtl;try{RenderInRtl.displayName="RenderInRtl",RenderInRtl.__docgenInfo={description:"",displayName:"RenderInRtl",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/utils/rtl/RenderInRtl.tsx#RenderInRtl"]={docgenInfo:RenderInRtl.__docgenInfo,name:"RenderInRtl",path:"src/utils/rtl/RenderInRtl.tsx#RenderInRtl"})}catch(__react_docgen_typescript_loader_error){}}}]);